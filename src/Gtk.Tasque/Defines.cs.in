/***************************************************************************
 *  Defines.cs.in
 *
 *  Copyright (C) 2008 Novell, Inc.
 *  Copyright (C) 2012 Antonius Riha
 *  
 *  Written by
 *  	Calvin Gaisford <calvinrg@gmail.com>
 *  	Antonius Riha <antoniusriha@gmail.com>
 ****************************************************************************/

/*  THIS FILE IS LICENSED UNDER THE MIT LICENSE AS OUTLINED IMMEDIATELY BELOW: 
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),  
 *  to deal in the Software without restriction, including without limitation  
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,  
 *  and/or sell copies of the Software, and to permit persons to whom the  
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in 
 *  all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
 *  DEALINGS IN THE SOFTWARE.
 */

using System.Configuration;
using System.IO;

namespace Tasque
{
	public static class Defines
	{
		static Defines ()
		{
			var definesCfgFileMap = new ExeConfigurationFileMap ();
			definesCfgFileMap.ExeConfigFilename = "Tasque.exe.Defines.config";
			var cfg = ConfigurationManager.OpenMappedExeConfiguration (definesCfgFileMap, ConfigurationUserLevel.None);

			var appSettings = cfg.AppSettings;
			DataDir = appSettings.Settings ["DataDir"].Value;
		}

		public const string Version = @"@version@";
		public static readonly string DataDir;

		public static string LocaleDir { get { return Path.Combine (DataDir, "locale"); } }
		public static string IconsDir { get { return Path.Combine (DataDir, "tasque", "icons"); } }
		public static string SoundDir { get { return Path.Combine (DataDir, "tasque", "sounds"); } }
	}
}

<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" InitialTargets="_CheckProperties" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
  	<_tmpInstallFileNames>obj\Tasque.RelInstallFileNames.txt</_tmpInstallFileNames>
    <OutputPath>.</OutputPath>
    <SrcDir Condition=" '$(SrcDir)' == '' ">.</SrcDir>
    <LibDir Condition=" '$(LibDir)' == '' ">$(Prefix)\lib</LibDir>
    <BinDir Condition=" '$(BinDir)' == '' ">$(Prefix)\bin</BinDir>
    <PkgLibDir Condition=" '$(PkgLibDir)' == '' ">$(LibDir)\$(PackageName)</PkgLibDir>
    <DataDir Condition=" '$(DataDir)' == '' ">$(Prefix)\share</DataDir>
    <PkgDataDir Condition=" '$(PkgDataDir)' == '' ">$(DataDir)\$(PackageName)</PkgDataDir>
    <PkgConfigDir Condition=" '$(PkgConfigDir)' == '' ">$(LibDir)\pkgconfig</PkgConfigDir>
    <DestDir Condition=" '$(DestDir)' != '' And !HasTrailingSlash('$(DestDir)')">$(DestDir)\</DestDir>
    <BuildingSolutionFile>True</BuildingSolutionFile>
    <Wrapper Condition=" '$(Wrapper)' == '' ">$(PackageName)</Wrapper>
    <Version Condition=" '$(Version)' == '' ">1.0.0</Version>
  </PropertyGroup>
  <ItemGroup>
    <InstallFileName Include="$(TargetFileName)" />
    <Substitution Include="@prefix@|$(Prefix)|text" />
    <Substitution Include="@libdir@|$(LibDir)|text" />
    <Substitution Include="@pkglibdir@|$(PkgLibDir)|text" />
    <Substitution Include="@bindir@|$(BinDir)|text" />
    <Substitution Include="@exec_prefix@|$(BinDir)|text" />
    <Substitution Include="@datadir@|$(DataDir)|text" />
    <Substitution Include="@wrapper@|$(Wrapper)|text" />
    <Substitution Include="@version@|$(Version)|text" />
    <Substitution Include="@PACKAGE@|$(PackageName)|text" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  
  <!-- Build -->
  <Target Name="BeforeBeforeBuild" />
  <Target Name="BeforeBuild" DependsOnTargets="BeforeBeforeBuild">
    <CreateItem Include="$(SrcDir)\%(TasqueCompile.RelativeDir)%(FileName)%(Extension)">
      <Output TaskParameter="Include" ItemName="Compile" />
    </CreateItem>
    <CreateItem Condition=" '@(ProjectReference)' != '' " Include="%(ProjectReference.RelativeDir)\*.dll" >
      <Output TaskParameter="Include" ItemName="ChildProjectReferences" />
    </CreateItem>
  </Target>
  
  <!-- Clean -->
  <Target Name="AfterClean">
    <CreateItem Include="*.dll;*.mdb">
      <Output TaskParameter="Include" ItemName="TasqueCleanFile" />
    </CreateItem>
    <Message Text="TasqueCleanFile: @(TasqueCleanFile)" />
    <Delete Files="@(TasqueCleanFile)" />
  </Target>
  
  <!-- Install -->
  <Target Name="Install" DependsOnTargets="BeforeInstall;CoreInstall;AfterInstall" />
  <Target Name="BeforeInstall" />
  <Target Name="AfterInstall" />
  <Target Name="CoreInstall">
    <CreateItem Condition="Exists('$(TargetFileName).mdb')" Include="$(TargetFileName).mdb">
      <Output TaskParameter="Include" ItemName="InstallFileName" />
    </CreateItem>
    <Copy SourceFiles="@(InstallFileName)" DestinationFiles="$(DestDir)$(PkgLibDir)\%(RelativeDir)%(FileName)%(Extension)" SkipUnchangedFiles="true" />
    <WriteLinesToFile File="$(_tmpInstallFileNames)" Lines="@(InstallFileName)" Overwrite="true" />
  </Target>
  <UsingTask TaskName="Tasque.Build.Substitute" AssemblyFile="build.dll" />
	
  <!-- Substitute -->
  <Target Name="Substitute" DependsOnTargets="BeforeSubstitute;CoreSubstitute;AfterSubstitute" />
  <Target Name="BeforeSubstitute" />
  <Target Name="AfterSubstitute" />
  <Target Name="CoreSubstitute" Condition=" '@(Substitute)' != '' ">
    <CreateItem Include="$(SrcDir)\%(Substitute.RelativeDir)%(FileName)%(Extension)">
      <Output TaskParameter="Include" ItemName="_SubstSourceFiles" />
    </CreateItem>
    <CreateItem Include="%(Substitute.RelativeDir)%(FileName)">
      <Output TaskParameter="Include" ItemName="_SubstDestFiles" />
    </CreateItem>
    <Substitute SourceFiles="@(_SubstSourceFiles)" DestinationFiles="@(_SubstDestFiles)" Substitutions="@(Substitution)" />
  </Target>
  
  <!-- Uninstall -->
  <Target Name="Uninstall" DependsOnTargets="BeforeUninstall;CoreUninstall;AfterUninstall" />
  <Target Name="BeforeUninstall" />
  <Target Name="AfterUninstall" />
  <Target Name="CoreUninstall">
    <ReadLinesFromFile File="$(_tmpInstallFileNames)" >
      <Output TaskParameter="Lines" ItemName="InstallFileName" />
    </ReadLinesFromFile>
    <Delete Files="$(DestDir)$(PkgLibDir)\%(InstallFileName.RelativeDir)%(FileName)%(Extension)" />
    <Delete Files="$(_tmpInstallFileNames)" />
  </Target>
  
  <!-- Dist -->
  <Target Name="Dist">
    <Message Text="DistDir=$(DistDir)" />
    <Error Condition=" '$(DistDir)' == '' " Text="Property DistDir not set. Target Dist requires DistDir to be set." />
    <CreateItem Include="*.csproj;@(TasqueCompile)">
      <Output TaskParameter="Include" ItemName="DistFile" />
    </CreateItem>
    <Message Text="@(DistFile)" />
    <Copy SourceFiles="$(SrcDir)\%(DistFile.RelativeDir)%(FileName)%(Extension)" DestinationFiles="$(DistDir)\%(DistFile.RelativeDir)%(FileName)%(Extension)" SkipUnchangedFiles="true" />
  </Target>
  
  <!-- Distclean -->
  <Target Name="DistClean" DependsOnTargets="Clean">
    <CreateItem Include="Makefile;*.csp">
      <Output TaskParameter="Include" ItemName="DistCleanFile" />
    </CreateItem>
    <Delete Files="%(DistCleanFile.RelativeDir)%(FileName)%(Extension)" />
  </Target>
</Project>
